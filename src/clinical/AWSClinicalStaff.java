
package clinical;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AWSClinicalStaff", targetNamespace = "http://clinical/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AWSClinicalStaff {


    /**
     * 
     * @return
     *     returns java.util.List<clinical.Patient>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnAllPatients", targetNamespace = "http://clinical/", className = "clinical.ReturnAllPatients")
    @ResponseWrapper(localName = "returnAllPatientsResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnAllPatientsResponse")
    public List<Patient> returnAllPatients();

    /**
     * 
     * @param arg0
     * @return
     *     returns clinical.Patient
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnPatientById", targetNamespace = "http://clinical/", className = "clinical.ReturnPatientById")
    @ResponseWrapper(localName = "returnPatientByIdResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnPatientByIdResponse")
    public Patient returnPatientById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<clinical.Patient>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnNotAttentedPatients", targetNamespace = "http://clinical/", className = "clinical.ReturnNotAttentedPatients")
    @ResponseWrapper(localName = "returnNotAttentedPatientsResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnNotAttentedPatientsResponse")
    public List<Patient> returnNotAttentedPatients();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertTransaction", targetNamespace = "http://clinical/", className = "clinical.InsertTransaction")
    @ResponseWrapper(localName = "insertTransactionResponse", targetNamespace = "http://clinical/", className = "clinical.InsertTransactionResponse")
    public boolean insertTransaction(
        @WebParam(name = "arg0", targetNamespace = "")
        Transaction arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateConsultations", targetNamespace = "http://clinical/", className = "clinical.UpdateConsultations")
    @ResponseWrapper(localName = "updateConsultationsResponse", targetNamespace = "http://clinical/", className = "clinical.UpdateConsultationsResponse")
    public boolean updateConsultations(
        @WebParam(name = "arg0", targetNamespace = "")
        Consultations arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<clinical.Perscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnPerscriptions", targetNamespace = "http://clinical/", className = "clinical.ReturnPerscriptions")
    @ResponseWrapper(localName = "returnPerscriptionsResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnPerscriptionsResponse")
    public List<Perscription> returnPerscriptions();

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deletePerscrtiptionDetails", targetNamespace = "http://clinical/", className = "clinical.DeletePerscrtiptionDetails")
    @ResponseWrapper(localName = "deletePerscrtiptionDetailsResponse", targetNamespace = "http://clinical/", className = "clinical.DeletePerscrtiptionDetailsResponse")
    public void deletePerscrtiptionDetails(
        @WebParam(name = "arg0", targetNamespace = "")
        PercriptionDetails arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertPerscription", targetNamespace = "http://clinical/", className = "clinical.InsertPerscription")
    @ResponseWrapper(localName = "insertPerscriptionResponse", targetNamespace = "http://clinical/", className = "clinical.InsertPerscriptionResponse")
    public boolean insertPerscription(
        @WebParam(name = "arg0", targetNamespace = "")
        Perscription arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updatePerscription", targetNamespace = "http://clinical/", className = "clinical.UpdatePerscription")
    @ResponseWrapper(localName = "updatePerscriptionResponse", targetNamespace = "http://clinical/", className = "clinical.UpdatePerscriptionResponse")
    public boolean updatePerscription(
        @WebParam(name = "arg0", targetNamespace = "")
        Perscription arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<clinical.SideEffect>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnSideEffects", targetNamespace = "http://clinical/", className = "clinical.ReturnSideEffects")
    @ResponseWrapper(localName = "returnSideEffectsResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnSideEffectsResponse")
    public List<SideEffect> returnSideEffects();

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteSelfHarmIncident", targetNamespace = "http://clinical/", className = "clinical.DeleteSelfHarmIncident")
    @ResponseWrapper(localName = "deleteSelfHarmIncidentResponse", targetNamespace = "http://clinical/", className = "clinical.DeleteSelfHarmIncidentResponse")
    public void deleteSelfHarmIncident(
        @WebParam(name = "arg0", targetNamespace = "")
        SelfHarmIncident arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertPerscriptionDetails", targetNamespace = "http://clinical/", className = "clinical.InsertPerscriptionDetails")
    @ResponseWrapper(localName = "insertPerscriptionDetailsResponse", targetNamespace = "http://clinical/", className = "clinical.InsertPerscriptionDetailsResponse")
    public boolean insertPerscriptionDetails(
        @WebParam(name = "arg0", targetNamespace = "")
        PercriptionDetails arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertPatientSideEffects", targetNamespace = "http://clinical/", className = "clinical.InsertPatientSideEffects")
    @ResponseWrapper(localName = "insertPatientSideEffectsResponse", targetNamespace = "http://clinical/", className = "clinical.InsertPatientSideEffectsResponse")
    public boolean insertPatientSideEffects(
        @WebParam(name = "arg0", targetNamespace = "")
        PatientSideEffects arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<clinical.PharmakoTreats>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnPharmakoTreatsByDrugName", targetNamespace = "http://clinical/", className = "clinical.ReturnPharmakoTreatsByDrugName")
    @ResponseWrapper(localName = "returnPharmakoTreatsByDrugNameResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnPharmakoTreatsByDrugNameResponse")
    public List<PharmakoTreats> returnPharmakoTreatsByDrugName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deletePatientSideEffects", targetNamespace = "http://clinical/", className = "clinical.DeletePatientSideEffects")
    @ResponseWrapper(localName = "deletePatientSideEffectsResponse", targetNamespace = "http://clinical/", className = "clinical.DeletePatientSideEffectsResponse")
    public void deletePatientSideEffects(
        @WebParam(name = "arg0", targetNamespace = "")
        PatientSideEffects arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<clinical.PharmakoSideEffects>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnPharmakoSideEffectsbyName", targetNamespace = "http://clinical/", className = "clinical.ReturnPharmakoSideEffectsbyName")
    @ResponseWrapper(localName = "returnPharmakoSideEffectsbyNameResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnPharmakoSideEffectsbyNameResponse")
    public List<PharmakoSideEffects> returnPharmakoSideEffectsbyName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertSelfHarmIncident", targetNamespace = "http://clinical/", className = "clinical.InsertSelfHarmIncident")
    @ResponseWrapper(localName = "insertSelfHarmIncidentResponse", targetNamespace = "http://clinical/", className = "clinical.InsertSelfHarmIncidentResponse")
    public boolean insertSelfHarmIncident(
        @WebParam(name = "arg0", targetNamespace = "")
        SelfHarmIncident arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnPatientAllergy", targetNamespace = "http://clinical/", className = "clinical.ReturnPatientAllergy")
    @ResponseWrapper(localName = "returnPatientAllergyResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnPatientAllergyResponse")
    public boolean returnPatientAllergy(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateSelfHarmIncident", targetNamespace = "http://clinical/", className = "clinical.UpdateSelfHarmIncident")
    @ResponseWrapper(localName = "updateSelfHarmIncidentResponse", targetNamespace = "http://clinical/", className = "clinical.UpdateSelfHarmIncidentResponse")
    public boolean updateSelfHarmIncident(
        @WebParam(name = "arg0", targetNamespace = "")
        SelfHarmIncident arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<clinical.PercriptionDetails>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnLastPerscriptionDetailsByPId", targetNamespace = "http://clinical/", className = "clinical.ReturnLastPerscriptionDetailsByPId")
    @ResponseWrapper(localName = "returnLastPerscriptionDetailsByPIdResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnLastPerscriptionDetailsByPIdResponse")
    public List<PercriptionDetails> returnLastPerscriptionDetailsByPId(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<clinical.SelfHarmIncident>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnSelfHarmIncidentByPatientId", targetNamespace = "http://clinical/", className = "clinical.ReturnSelfHarmIncidentByPatientId")
    @ResponseWrapper(localName = "returnSelfHarmIncidentByPatientIdResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnSelfHarmIncidentByPatientIdResponse")
    public List<SelfHarmIncident> returnSelfHarmIncidentByPatientId(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<clinical.Consultations>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnAttentedNotUpdatedConsultations", targetNamespace = "http://clinical/", className = "clinical.ReturnAttentedNotUpdatedConsultations")
    @ResponseWrapper(localName = "returnAttentedNotUpdatedConsultationsResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnAttentedNotUpdatedConsultationsResponse")
    public List<Consultations> returnAttentedNotUpdatedConsultations();

    /**
     * 
     * @param arg0
     * @return
     *     returns clinical.Consultations
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnMostRecentConsultationOfPatient", targetNamespace = "http://clinical/", className = "clinical.ReturnMostRecentConsultationOfPatient")
    @ResponseWrapper(localName = "returnMostRecentConsultationOfPatientResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnMostRecentConsultationOfPatientResponse")
    public Consultations returnMostRecentConsultationOfPatient(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<clinical.PercriptionDetails>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnLastPerscriptionDetailsByPrescriptionId", targetNamespace = "http://clinical/", className = "clinical.ReturnLastPerscriptionDetailsByPrescriptionId")
    @ResponseWrapper(localName = "returnLastPerscriptionDetailsByPrescriptionIdResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnLastPerscriptionDetailsByPrescriptionIdResponse")
    public List<PercriptionDetails> returnLastPerscriptionDetailsByPrescriptionId(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<clinical.PatientSideEffects>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnPatientSideEffectsByPatientId", targetNamespace = "http://clinical/", className = "clinical.ReturnPatientSideEffectsByPatientId")
    @ResponseWrapper(localName = "returnPatientSideEffectsByPatientIdResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnPatientSideEffectsByPatientIdResponse")
    public List<PatientSideEffects> returnPatientSideEffectsByPatientId(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<clinical.Pharmako>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnPharmako", targetNamespace = "http://clinical/", className = "clinical.ReturnPharmako")
    @ResponseWrapper(localName = "returnPharmakoResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnPharmakoResponse")
    public List<Pharmako> returnPharmako();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertOverrule", targetNamespace = "http://clinical/", className = "clinical.InsertOverrule")
    @ResponseWrapper(localName = "insertOverruleResponse", targetNamespace = "http://clinical/", className = "clinical.InsertOverruleResponse")
    public boolean insertOverrule(
        @WebParam(name = "arg0", targetNamespace = "")
        Overrule arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<clinical.Disease>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnDiseases", targetNamespace = "http://clinical/", className = "clinical.ReturnDiseases")
    @ResponseWrapper(localName = "returnDiseasesResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnDiseasesResponse")
    public List<Disease> returnDiseases();

    /**
     * 
     * @return
     *     returns java.util.List<clinical.Clinic>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnClinics", targetNamespace = "http://clinical/", className = "clinical.ReturnClinics")
    @ResponseWrapper(localName = "returnClinicsResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnClinicsResponse")
    public List<Clinic> returnClinics();

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteConsults", targetNamespace = "http://clinical/", className = "clinical.DeleteConsults")
    @ResponseWrapper(localName = "deleteConsultsResponse", targetNamespace = "http://clinical/", className = "clinical.DeleteConsultsResponse")
    public void deleteConsults(
        @WebParam(name = "arg0", targetNamespace = "")
        Consultations arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<clinical.DoctorC>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnDoctors", targetNamespace = "http://clinical/", className = "clinical.ReturnDoctors")
    @ResponseWrapper(localName = "returnDoctorsResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnDoctorsResponse")
    public List<DoctorC> returnDoctors();

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deletePatient", targetNamespace = "http://clinical/", className = "clinical.DeletePatient")
    @ResponseWrapper(localName = "deletePatientResponse", targetNamespace = "http://clinical/", className = "clinical.DeletePatientResponse")
    public void deletePatient(
        @WebParam(name = "arg0", targetNamespace = "")
        Patient arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updatePatients", targetNamespace = "http://clinical/", className = "clinical.UpdatePatients")
    @ResponseWrapper(localName = "updatePatientsResponse", targetNamespace = "http://clinical/", className = "clinical.UpdatePatientsResponse")
    public boolean updatePatients(
        @WebParam(name = "arg0", targetNamespace = "")
        Patient arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns clinical.Consultations
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnById", targetNamespace = "http://clinical/", className = "clinical.ReturnById")
    @ResponseWrapper(localName = "returnByIdResponse", targetNamespace = "http://clinical/", className = "clinical.ReturnByIdResponse")
    public Consultations returnById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
