
package receptionist;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AWSReceptionist", targetNamespace = "http://receptionist/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AWSReceptionist {


    /**
     * 
     * @return
     *     returns java.util.List<receptionist.Patient>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnAllPatients", targetNamespace = "http://receptionist/", className = "receptionist.ReturnAllPatients")
    @ResponseWrapper(localName = "returnAllPatientsResponse", targetNamespace = "http://receptionist/", className = "receptionist.ReturnAllPatientsResponse")
    public List<Patient> returnAllPatients();

    /**
     * 
     * @param arg0
     * @return
     *     returns receptionist.Patient
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnPatientById", targetNamespace = "http://receptionist/", className = "receptionist.ReturnPatientById")
    @ResponseWrapper(localName = "returnPatientByIdResponse", targetNamespace = "http://receptionist/", className = "receptionist.ReturnPatientByIdResponse")
    public Patient returnPatientById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns receptionist.Consultations
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnConsultationsById", targetNamespace = "http://receptionist/", className = "receptionist.ReturnConsultationsById")
    @ResponseWrapper(localName = "returnConsultationsByIdResponse", targetNamespace = "http://receptionist/", className = "receptionist.ReturnConsultationsByIdResponse")
    public Consultations returnConsultationsById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<receptionist.Patient>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnNotAttentedPatients", targetNamespace = "http://receptionist/", className = "receptionist.ReturnNotAttentedPatients")
    @ResponseWrapper(localName = "returnNotAttentedPatientsResponse", targetNamespace = "http://receptionist/", className = "receptionist.ReturnNotAttentedPatientsResponse")
    public List<Patient> returnNotAttentedPatients();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertTransaction", targetNamespace = "http://receptionist/", className = "receptionist.InsertTransaction")
    @ResponseWrapper(localName = "insertTransactionResponse", targetNamespace = "http://receptionist/", className = "receptionist.InsertTransactionResponse")
    public boolean insertTransaction(
        @WebParam(name = "arg0", targetNamespace = "")
        Transaction arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertPerscription", targetNamespace = "http://receptionist/", className = "receptionist.InsertPerscription")
    @ResponseWrapper(localName = "insertPerscriptionResponse", targetNamespace = "http://receptionist/", className = "receptionist.InsertPerscriptionResponse")
    public boolean insertPerscription(
        @WebParam(name = "arg0", targetNamespace = "")
        Perscription arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<receptionist.Consultations>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnConsultations", targetNamespace = "http://receptionist/", className = "receptionist.ReturnConsultations")
    @ResponseWrapper(localName = "returnConsultationsResponse", targetNamespace = "http://receptionist/", className = "receptionist.ReturnConsultationsResponse")
    public List<Consultations> returnConsultations();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateConsultation", targetNamespace = "http://receptionist/", className = "receptionist.UpdateConsultation")
    @ResponseWrapper(localName = "updateConsultationResponse", targetNamespace = "http://receptionist/", className = "receptionist.UpdateConsultationResponse")
    public boolean updateConsultation(
        @WebParam(name = "arg0", targetNamespace = "")
        Consultations arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteConsultation", targetNamespace = "http://receptionist/", className = "receptionist.DeleteConsultation")
    @ResponseWrapper(localName = "deleteConsultationResponse", targetNamespace = "http://receptionist/", className = "receptionist.DeleteConsultationResponse")
    public void deleteConsultation(
        @WebParam(name = "arg0", targetNamespace = "")
        Consultations arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<receptionist.Perscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnPrescriptions", targetNamespace = "http://receptionist/", className = "receptionist.ReturnPrescriptions")
    @ResponseWrapper(localName = "returnPrescriptionsResponse", targetNamespace = "http://receptionist/", className = "receptionist.ReturnPrescriptionsResponse")
    public List<Perscription> returnPrescriptions();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<receptionist.Relatives>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnRelativesByPatientId", targetNamespace = "http://receptionist/", className = "receptionist.ReturnRelativesByPatientId")
    @ResponseWrapper(localName = "returnRelativesByPatientIdResponse", targetNamespace = "http://receptionist/", className = "receptionist.ReturnRelativesByPatientIdResponse")
    public List<Relatives> returnRelativesByPatientId(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertPerscriptionDetail", targetNamespace = "http://receptionist/", className = "receptionist.InsertPerscriptionDetail")
    @ResponseWrapper(localName = "insertPerscriptionDetailResponse", targetNamespace = "http://receptionist/", className = "receptionist.InsertPerscriptionDetailResponse")
    public boolean insertPerscriptionDetail(
        @WebParam(name = "arg0", targetNamespace = "")
        PercriptionDetails arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertConsultation", targetNamespace = "http://receptionist/", className = "receptionist.InsertConsultation")
    @ResponseWrapper(localName = "insertConsultationResponse", targetNamespace = "http://receptionist/", className = "receptionist.InsertConsultationResponse")
    public boolean insertConsultation(
        @WebParam(name = "arg0", targetNamespace = "")
        Consultations arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<receptionist.PercriptionDetails>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnLastPerscriptionDetailsByPId", targetNamespace = "http://receptionist/", className = "receptionist.ReturnLastPerscriptionDetailsByPId")
    @ResponseWrapper(localName = "returnLastPerscriptionDetailsByPIdResponse", targetNamespace = "http://receptionist/", className = "receptionist.ReturnLastPerscriptionDetailsByPIdResponse")
    public List<PercriptionDetails> returnLastPerscriptionDetailsByPId(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<receptionist.Consultations>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnAttentedNotUpdatedConsultations", targetNamespace = "http://receptionist/", className = "receptionist.ReturnAttentedNotUpdatedConsultations")
    @ResponseWrapper(localName = "returnAttentedNotUpdatedConsultationsResponse", targetNamespace = "http://receptionist/", className = "receptionist.ReturnAttentedNotUpdatedConsultationsResponse")
    public List<Consultations> returnAttentedNotUpdatedConsultations();

    /**
     * 
     * @param arg0
     * @return
     *     returns receptionist.Consultations
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnMostRecentConsultationOfPatient", targetNamespace = "http://receptionist/", className = "receptionist.ReturnMostRecentConsultationOfPatient")
    @ResponseWrapper(localName = "returnMostRecentConsultationOfPatientResponse", targetNamespace = "http://receptionist/", className = "receptionist.ReturnMostRecentConsultationOfPatientResponse")
    public Consultations returnMostRecentConsultationOfPatient(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<receptionist.Clinic>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnClinics", targetNamespace = "http://receptionist/", className = "receptionist.ReturnClinics")
    @ResponseWrapper(localName = "returnClinicsResponse", targetNamespace = "http://receptionist/", className = "receptionist.ReturnClinicsResponse")
    public List<Clinic> returnClinics();

    /**
     * 
     * @return
     *     returns java.util.List<receptionist.DoctorC>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnDoctors", targetNamespace = "http://receptionist/", className = "receptionist.ReturnDoctors")
    @ResponseWrapper(localName = "returnDoctorsResponse", targetNamespace = "http://receptionist/", className = "receptionist.ReturnDoctorsResponse")
    public List<DoctorC> returnDoctors();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertRelative", targetNamespace = "http://receptionist/", className = "receptionist.InsertRelative")
    @ResponseWrapper(localName = "insertRelativeResponse", targetNamespace = "http://receptionist/", className = "receptionist.InsertRelativeResponse")
    public boolean insertRelative(
        @WebParam(name = "arg0", targetNamespace = "")
        Relatives arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteRelative", targetNamespace = "http://receptionist/", className = "receptionist.DeleteRelative")
    @ResponseWrapper(localName = "deleteRelativeResponse", targetNamespace = "http://receptionist/", className = "receptionist.DeleteRelativeResponse")
    public void deleteRelative(
        @WebParam(name = "arg0", targetNamespace = "")
        Relatives arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertRequest", targetNamespace = "http://receptionist/", className = "receptionist.InsertRequest")
    @ResponseWrapper(localName = "insertRequestResponse", targetNamespace = "http://receptionist/", className = "receptionist.InsertRequestResponse")
    public boolean insertRequest(
        @WebParam(name = "arg0", targetNamespace = "")
        Requests arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateRelative", targetNamespace = "http://receptionist/", className = "receptionist.UpdateRelative")
    @ResponseWrapper(localName = "updateRelativeResponse", targetNamespace = "http://receptionist/", className = "receptionist.UpdateRelativeResponse")
    public boolean updateRelative(
        @WebParam(name = "arg0", targetNamespace = "")
        Relatives arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

}
